AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create an EC2 instance named 'rhel-webserver' in private subnet.

Resources:
  # Security Group for the EC2 instance
  WebServerInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for rhel-webserver
      VpcId: 'vpc-0a291b0d61d8a0bce' # Known, previously built VPC
      PrivateIpAddress: 10.0.0.137
      SecurityGroupIngress:
        # Allow SSH from Bastion private subnet
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/28
        # Allow SSH from own private subnet
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.128/28
        # Allow HTTP from Firewall subnet
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.0.0.0/28
        # Allow HTTPS from Firewall subnet
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/28
        # Allow traffic to port 9090 from Bastion private subnet (so bastion server can access Cockpit)
        - IpProtocol: tcp
          FromPort: 9090
          ToPort: 9090
          CidrIp: 10.0.0.0/28
      Tags:
        - Key: Name
          Value: rhel-webserver-sg

  # Webserver EC2 instance
  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0583d8c7a9c35822c
      KeyName: rhel9-playground-key-pair # Using the same key pair for demo, realistically would generate a key pair for each whitelisted connection
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: 'subnet-094a9b9d467250e34' # Known, previously built private subnet in VPC (!Ref VpcId). NOTE: This subnet has a route table rule which redirects outbound 0.0.0.0/0 traffic to the NAT Gateway!
          GroupSet:
            - !Ref WebServerInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: rhel-webserver
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          dnf install -y cockpit
          dnf install -y cockpit-pcp
          dnf install -y httpd
          dnf install -y rsync
          dnf install -y scap-security-guide lynx

          systemctl enable --now cockpit.socket
          systemctl enable --now pmlogger.service
          systemctl enable --now httpd.service

          cat <<EOF > /var/www/html/index.html
          <html>
            <title>SecuredByCharles</title>
            <body>
              <p>Look under the hood!</p>
              <a href="https://github.com/badcharliee/rhel-network-demo">Github</a>
            </body>
          </html>
          EOF

          systemctl restart httpd

          CRON_JOB="0 2 * * * rsync --progress -avz -e 'ssh -i /home/ec2-user/.ssh/rhel9-playground-key-pair.pem' /var/www/html/ ec2-user@10.0.0.139:/home/ec2-user/backup/"
          (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -

          # Evaluate CIS Benchmarks Level 1 and Generate Report
          oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_cis_server_l1 --results ~/OpenScap_results_file.xml /usr/share/xml/scap/ssg/content/ssg-rhel9-ds.xml
          oscap xccdf generate report --output ~/OpenScap_report_file.html ~/OpenScap_results_file.xml

  # Backup Webserver EC2 instance
  WebServerBackupInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0583d8c7a9c35822c
      KeyName: rhel9-playground-key-pair # Using the same key pair for demo, realistically would generate a key pair for each whitelisted connection
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: 0
          SubnetId: 'subnet-094a9b9d467250e34' # Known, previously built private subnet in VPC (!Ref VpcId). NOTE: This subnet has a route table rule which redirects outbound 0.0.0.0/0 traffic to the NAT Gateway!
          GroupSet:
            - !Ref WebServerInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: rhel-webserver-backup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          dnf install -y cockpit
          dnf install -y cockpit-pcp
          dnf install -y httpd
          dnf install -y rsync
          dnf install -y scap-security-guide lynx

          systemctl enable --now cockpit.socket
          systemctl enable --now pmlogger.service
          systemctl enable --now httpd.service

          # Evaluate CIS Benchmarks Level 1 and Generate Report
          oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_cis_server_l1 --results ~/OpenScap_results_file.xml /usr/share/xml/scap/ssg/content/ssg-rhel9-ds.xml
          oscap xccdf generate report --output ~/OpenScap_report_file.html ~/OpenScap_results_file.xml
